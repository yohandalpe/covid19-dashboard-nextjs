{"version":3,"file":"static/webpack/static/development/pages/italy.js.2e95a775c31f6239173d.hot-update.js","sources":["webpack:///./pages/italy.js"],"sourcesContent":["import Layout from \"../components/MainLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport NumberFormat from \"react-number-format\";\n\nconst Index = props => (\n  <Layout>\n    <h1>COVID-19 Situation Report in Italy</h1>\n\n    <h4>\n      As at{\" \"}\n      {props.nationalLatest.map((nationalLatest, i) => (\n        <span key={i}>{nationalLatest.data} UTC</span>\n      ))}\n    </h4>\n    <hr></hr>\n    <h2 className=\"my-3\">Total</h2>\n    <div className=\"row\">\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-secondary\">\n            <div className=\"card-body text-secondary\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.ricoverati_con_sintomi}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Hospitalised with Symptoms</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-secondary\">\n            <div className=\"card-body text-secondary\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.terapia_intensiva}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Intensive Therapy</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-secondary\">\n            <div className=\"card-body text-secondary\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.totale_ospedalizzati}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Total Hospitalised</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-secondary\">\n            <div className=\"card-body text-secondary\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.isolamento_domiciliare}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Home Insulation</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-secondary\">\n            <div className=\"card-body text-secondary\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.totale_attualmente_positivi}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Current Cases</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-secondary\">\n            <div className=\"card-body text-secondary\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.nuovi_attualmente_positivi}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">New Cases</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-info\">\n            <div className=\"card-body text-info\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.totale_casi}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Total Cases</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-success\">\n            <div className=\"card-body text-success\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.dimessi_guariti}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Recovered</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.nationalLatest.slice(0, 1).map((nationalLatest, i) => (\n        <div key={i} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-danger\">\n            <div className=\"card-body text-danger\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={nationalLatest.deceduti}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Deaths</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n\n    <h2 className=\"my-3\">Regional Data</h2>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Region</th>\n            <th>Hospitalised with Symptoms</th>\n            <th>Intensive Therapy</th>\n            <th>Total Hospitalised</th>\n            <th>Home Insulation</th>\n            <th>Current Cases</th>\n            <th>New Cases</th>\n            <th>Total Cases</th>\n            <th>Recovered</th>\n            <th>Deaths</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.regionLatest.map((regionLatest, i) => (\n            <tr key={i}>\n              <td>{i + 1}</td>\n              <td>{regionLatest.denominazione_regione}</td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.ricoverati_con_sintomi}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.terapia_intensiva}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.totale_ospedalizzati}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.isolamento_domiciliare}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.totale_attualmente_positivi}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.nuovi_attualmente_positivi}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.totale_casi}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.dimessi_guariti}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={regionLatest.deceduti}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n\n\n    <footer className=\"footer mt-auto py-3\">\n      <p>\n        Data Source:{\" \"}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_blank\">\n          COVID-19 Italy - Situation Monitoring\n        </a>\n      </p>\n      <ul className=\"list-unstyled\">\n        <li>\n          <strong>Important Links</strong>\n        </li>\n        <li>\n          <a\n            href=\"http://www.protezionecivile.it/attivita-rischi/rischio-sanitario/emergenze/coronavirus\"\n            target=\"_blank\"\n          >\n            Department of Civil Protection Website - Coronavirus Emergency: The\n            National Response\n          </a>\n        </li>\n      </ul>\n\n      <p className=\"mt-3\">\n        Built and maintained by{\" \"}\n        <a href=\"https://dalpatadu.com/\" target=\"_blank\">\n          Yohan Dalpatadu\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          href=\"https://github.com/yohandalpe/covid19-dashboard-nextjs\"\n          target=\"_blank\"\n        >\n          GitHub Repository\n        </a>{\" \"}\n      </p>\n    </footer>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  // Fetch data from the JSON\n  // Italy National Latest\n  const resNationalLatest = await fetch(\n    \"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale-latest.json\"\n  );\n  // Italy Region Latest\n  const resRegionLatest = await fetch(\n    \"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-regioni-latest.json\"\n  );\n\n  const resDataNationalLatest = await resNationalLatest.json();\n  const resDataRegionLatest = await resRegionLatest.json();\n\n  // Pass data to the page via props\n  return {\n    nationalLatest: resDataNationalLatest,\n    regionLatest: resDataRegionLatest\n  };\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAiBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAmrEA;AAmFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AA1SA;AACA;AAoTA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAOA;AAPA;AAAA;AACA;AADA;AAWA;AAXA;AAAA;AACA;AADA;AAYA;AAZA;AAgBA;AACA;AAFA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAoBA;;;;A","sourceRoot":""}