{"ast":null,"code":"var _jsxFileName = \"/Users/yohandalpatadu/Projects/github/covid19-dashboard-nextjs/pages/italy.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MainLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport NumberFormat from \"react-number-format\";\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"COVID-19 Situation Report in Italy\"), __jsx(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"As at\", \" \", props.updated.map((updated, i) => __jsx(\"span\", {\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, updated.lastupdated))), __jsx(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), __jsx(\"h2\", {\n  className: \"my-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, \"Total\"), __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, props.stats.slice(0, 1).map(prefectures => __jsx(\"div\", {\n  key: prefectures.prefecture,\n  className: \"col-sm-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card mb-3 border-info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-body text-info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, __jsx(\"h3\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.cases,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n})), __jsx(\"p\", {\n  className: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, \"Cases\"))))), props.stats.slice(0, 1).map(prefectures => __jsx(\"div\", {\n  key: prefectures.prefecture,\n  className: \"col-sm-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card mb-3 border-success\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-body text-success\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}, __jsx(\"h3\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.recovered,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n})), __jsx(\"p\", {\n  className: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, \"Recovered\"))))), props.stats.slice(0, 1).map(prefectures => __jsx(\"div\", {\n  key: prefectures.prefecture,\n  className: \"col-sm-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card mb-3 border-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-body text-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, __jsx(\"h3\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.deaths,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n})), __jsx(\"p\", {\n  className: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, \"Deaths\")))))), __jsx(\"h2\", {\n  className: \"my-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, \"Prefecture Data\"), __jsx(\"div\", {\n  className: \"table-responsive\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, __jsx(\"table\", {\n  className: \"table table-hover table-bordered\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n}, __jsx(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}, __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, \"Prefecture\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, \"Cases\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, \"Recovered\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, \"Deaths\"))), __jsx(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, props.stats.slice(1).map(prefectures => __jsx(\"tr\", {\n  key: prefectures.prefecture,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 83\n  },\n  __self: this\n}, __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 84\n  },\n  __self: this\n}, prefectures.prefecture, \" (\", prefectures.prefectureja, \")\"), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.cases,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.recovered,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.deaths,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}))))))), __jsx(\"h2\", {\n  className: \"my-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n}, \"Daily Report\"), __jsx(\"div\", {\n  className: \"table-responsive\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n}, __jsx(\"table\", {\n  className: \"table table-hover table-bordered\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 119\n  },\n  __self: this\n}, __jsx(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 120\n  },\n  __self: this\n}, __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 121\n  },\n  __self: this\n}, __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122\n  },\n  __self: this\n}, \"Date\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 123\n  },\n  __self: this\n}, \"Confirmed\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, \"Recovered\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n}, \"Deceased\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126\n  },\n  __self: this\n}, \"Critical\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}, \"Tested\"))), __jsx(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 130\n  },\n  __self: this\n}, props.daily.map((daily, i) => __jsx(\"tr\", {\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n}, daily.date), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.confirmed,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 135\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.recovered,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 150\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.deceased,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.critical,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 166\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.tested,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 167\n  },\n  __self: this\n}))))))), __jsx(\"footer\", {\n  className: \"footer mt-auto py-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 180\n  },\n  __self: this\n}, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 181\n  },\n  __self: this\n}, \"Data Source:\", \" \", __jsx(\"a\", {\n  href: \"https://github.com/pcm-dpc/COVID-19\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 183\n  },\n  __self: this\n}, \"COVID-19 Italy - Situation Monitoring\")), __jsx(\"ul\", {\n  className: \"list-unstyled\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 187\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 188\n  },\n  __self: this\n}, __jsx(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 189\n  },\n  __self: this\n}, \"Important Links\")), __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 191\n  },\n  __self: this\n}, __jsx(\"a\", {\n  href: \"http://www.protezionecivile.it/attivita-rischi/rischio-sanitario/emergenze/coronavirus\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 192\n  },\n  __self: this\n}, \"Department of Civil Protection Website - Coronavirus Emergency: The National Response\"))), __jsx(\"p\", {\n  className: \"mt-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 201\n  },\n  __self: this\n}, \"Built and maintained by\", \" \", __jsx(\"a\", {\n  href: \"https://dalpatadu.com/\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 203\n  },\n  __self: this\n}, \"Yohan Dalpatadu\"), \" \", \"|\", \" \", __jsx(\"a\", {\n  href: \"https://github.com/yohandalpe/covid19-dashboard-nextjs\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 207\n  },\n  __self: this\n}, \"GitHub Repository\"), \" \")));\n\nIndex.getInitialProps = async function () {\n  // Fetch data from the JSON\n  // Italy National Latest\n  const resNationalLatest = await fetch(\"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale-latest.json\"); // Italy Province Latest\n\n  const resProvinceLatest = await fetch(\"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-province-latest.json\");\n  const resDataNationalLatest = await resNationalLatest.json();\n  const resDataProvinceLatest = await resProvinceLatest.json(); // Pass data to the page via props\n\n  return {\n    nationalLatest: resDataNationalLatest,\n    provinceLatest: resDataProvinceLatest\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/yohandalpatadu/Projects/github/covid19-dashboard-nextjs/pages/italy.js"],"names":["Layout","fetch","NumberFormat","Index","props","updated","map","i","lastupdated","stats","slice","prefectures","prefecture","cases","recovered","deaths","prefectureja","daily","date","confirmed","deceased","critical","tested","getInitialProps","resNationalLatest","resProvinceLatest","resDataNationalLatest","json","resDataProvinceLatest","nationalLatest","provinceLatest"],"mappings":"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","sourcesContent":["import Layout from \"../components/MainLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport NumberFormat from \"react-number-format\";\n\nconst Index = props => (\n  <Layout>\n    <h1>COVID-19 Situation Report in Italy</h1>\n\n    <h4>\n      As at{\" \"}\n      {props.updated.map((updated, i) => (\n        <span key={i}>{updated.lastupdated}</span>\n      ))}\n    </h4>\n    <hr></hr>\n    <h2 className=\"my-3\">Total</h2>\n    <div className=\"row\">\n      {props.stats.slice(0, 1).map(prefectures => (\n        <div key={prefectures.prefecture} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-info\">\n            <div className=\"card-body text-info\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={prefectures.cases}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Cases</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.stats.slice(0, 1).map(prefectures => (\n        <div key={prefectures.prefecture} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-success\">\n            <div className=\"card-body text-success\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={prefectures.recovered}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Recovered</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.stats.slice(0, 1).map(prefectures => (\n        <div key={prefectures.prefecture} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-danger\">\n            <div className=\"card-body text-danger\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={prefectures.deaths}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Deaths</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n    <h2 className=\"my-3\">Prefecture Data</h2>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>\n            <th>Prefecture</th>\n            <th>Cases</th>\n            <th>Recovered</th>\n            <th>Deaths</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.stats.slice(1).map(prefectures => (\n            <tr key={prefectures.prefecture}>\n              <td>\n                {prefectures.prefecture} ({prefectures.prefectureja})\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.cases}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.recovered}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.deaths}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n\n    <h2 className=\"my-3\">Daily Report</h2>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Confirmed</th>\n            <th>Recovered</th>\n            <th>Deceased</th>\n            <th>Critical</th>\n            <th>Tested</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.daily.map((daily, i) => (\n            <tr key={i}>\n              <td>{daily.date}</td>\n              <td>\n                <NumberFormat\n                  value={daily.confirmed}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.recovered}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.deceased}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.critical}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.tested}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n\n    <footer className=\"footer mt-auto py-3\">\n      <p>\n        Data Source:{\" \"}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_blank\">\n          COVID-19 Italy - Situation Monitoring\n        </a>\n      </p>\n      <ul className=\"list-unstyled\">\n        <li>\n          <strong>Important Links</strong>\n        </li>\n        <li>\n          <a\n            href=\"http://www.protezionecivile.it/attivita-rischi/rischio-sanitario/emergenze/coronavirus\"\n            target=\"_blank\"\n          >\n            Department of Civil Protection Website - Coronavirus Emergency: The National Response\n          </a>\n        </li>\n      </ul>\n\n      <p className=\"mt-3\">\n        Built and maintained by{\" \"}\n        <a href=\"https://dalpatadu.com/\" target=\"_blank\">\n          Yohan Dalpatadu\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          href=\"https://github.com/yohandalpe/covid19-dashboard-nextjs\"\n          target=\"_blank\"\n        >\n          GitHub Repository\n        </a>{\" \"}\n      </p>\n    </footer>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  // Fetch data from the JSON\n  // Italy National Latest\n  const resNationalLatest = await fetch(\n    \"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale-latest.json\"\n  );\n  // Italy Province Latest\n  const resProvinceLatest = await fetch(\n    \"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-province-latest.json\"\n  );\n\n  const resDataNationalLatest = await resNationalLatest.json();\n  const resDataProvinceLatest = await resProvinceLatest.json();\n\n  // Pass data to the page via props\n  return {\n    nationalLatest: resDataNationalLatest,\n    provinceLatest: resDataProvinceLatest\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}