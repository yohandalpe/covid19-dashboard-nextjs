{"ast":null,"code":"var _jsxFileName = \"/Users/yohandalpatadu/Projects/github/covid19-dashboard-nextjs/pages/japan.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MainLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport NumberFormat from \"react-number-format\";\n\nconst Index = props => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, __jsx(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}, \"COVID-19 Situation Report in Japan\"), __jsx(\"h4\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"As at \", props.stats.map((updated, i) => __jsx(\"span\", {\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, updated.lastupdated))), __jsx(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}), __jsx(\"h2\", {\n  className: \"my-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Total\"), __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, props.stats.slice(0, 1).map(prefectures => __jsx(\"div\", {\n  key: prefectures.prefecture,\n  className: \"col-sm-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card mb-3 border-info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-body text-info\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, __jsx(\"h3\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.cases,\n  displayType: 'text',\n  thousandSeparator: true,\n  prefix: '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})), __jsx(\"p\", {\n  className: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Cases\"))))), props.stats.slice(0, 1).map(prefectures => __jsx(\"div\", {\n  key: prefectures.prefecture,\n  className: \"col-sm-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card mb-3 border-success\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-body text-success\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, __jsx(\"h3\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.recovered,\n  displayType: 'text',\n  thousandSeparator: true,\n  prefix: '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n})), __jsx(\"p\", {\n  className: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, \"Recovered\"))))), props.stats.slice(0, 1).map(prefectures => __jsx(\"div\", {\n  key: prefectures.prefecture,\n  className: \"col-sm-4\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card mb-3 border-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"card-body text-danger\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}, __jsx(\"h3\", {\n  className: \"card-title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.deaths,\n  displayType: 'text',\n  thousandSeparator: true,\n  prefix: '',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n})), __jsx(\"p\", {\n  className: \"card-text\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, \"Deaths\")))))), __jsx(\"h2\", {\n  className: \"my-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, \"Prefecture Data\"), __jsx(\"div\", {\n  className: \"table-responsive\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, __jsx(\"table\", {\n  className: \"table table-hover table-bordered\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n}, __jsx(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55\n  },\n  __self: this\n}, __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"Prefecture\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}, \"Cases\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}, \"Recovered\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60\n  },\n  __self: this\n}, \"Deaths\"))), __jsx(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63\n  },\n  __self: this\n}, props.stats.slice(1).map(prefectures => __jsx(\"tr\", {\n  key: prefectures.prefecture,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65\n  },\n  __self: this\n}, __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66\n  },\n  __self: this\n}, prefectures.prefecture, \" (\", prefectures.prefectureja, \")\"), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.cases,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.recovered,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: prefectures.deaths,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}))))))), __jsx(\"h2\", {\n  className: \"my-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99\n  },\n  __self: this\n}, \"Daily Report\"), __jsx(\"div\", {\n  className: \"table-responsive\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100\n  },\n  __self: this\n}, __jsx(\"table\", {\n  className: \"table table-hover table-bordered\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, __jsx(\"thead\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}, __jsx(\"tr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 103\n  },\n  __self: this\n}, __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, \"Date\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}, \"Confirmed\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, \"Recovered\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107\n  },\n  __self: this\n}, \"Deceased\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 108\n  },\n  __self: this\n}, \"Critical\"), __jsx(\"th\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}, \"Tested\"))), __jsx(\"tbody\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 112\n  },\n  __self: this\n}, props.stats.map((daily, i) => __jsx(\"tr\", {\n  key: i,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 114\n  },\n  __self: this\n}, __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 115\n  },\n  __self: this\n}, daily.date), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 116\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.confirmed,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 117\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 124\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.recovered,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 125\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 132\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.deceased,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 133\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.critical,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 141\n  },\n  __self: this\n})), __jsx(\"td\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 148\n  },\n  __self: this\n}, __jsx(NumberFormat, {\n  value: daily.tested,\n  displayType: \"text\",\n  thousandSeparator: true,\n  prefix: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 149\n  },\n  __self: this\n}))))))), __jsx(\"footer\", {\n  className: \"footer mt-auto py-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 162\n  },\n  __self: this\n}, __jsx(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n}, \"Data Source:\", \" \", __jsx(\"a\", {\n  href: \"https://covid19japan.com/\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 165\n  },\n  __self: this\n}, \"Japan COVID-19 Coronavirus Tracker\")), __jsx(\"ul\", {\n  className: \"list-unstyled\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 169\n  },\n  __self: this\n}, __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 170\n  },\n  __self: this\n}, __jsx(\"strong\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171\n  },\n  __self: this\n}, \"Important Links\")), __jsx(\"li\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 173\n  },\n  __self: this\n}, __jsx(\"a\", {\n  href: \"http://idsc.tokyo-eiken.go.jp/diseases/2019-ncov/\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 174\n  },\n  __self: this\n}, \"Information from the Tokyo Metropolitan Infectious Disease Surveillance Center\"))), __jsx(\"p\", {\n  className: \"mt-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 184\n  },\n  __self: this\n}, \"Built and maintained by\", \" \", __jsx(\"a\", {\n  href: \"https://dalpatadu.com/\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 186\n  },\n  __self: this\n}, \"Yohan Dalpatadu\"), \" \", \"|\", \" \", __jsx(\"a\", {\n  href: \"https://github.com/yohandalpe/covid19-dashboard-nextjs\",\n  target: \"_blank\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 190\n  },\n  __self: this\n}, \"GitHub Repository\"), \" \")));\n\nIndex.getInitialProps = async function () {\n  // Fetch data from HPB API\n  const res = await fetch(\"https://covid19japan.s3.ap-northeast-1.amazonaws.com/data.json\");\n  const resData = await res.json(); // Pass data to the page via props\n\n  return {\n    stats: resData.prefectures,\n    updated: resData.updated\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/yohandalpatadu/Projects/github/covid19-dashboard-nextjs/pages/japan.js"],"names":["Layout","fetch","NumberFormat","Index","props","stats","map","updated","i","lastupdated","slice","prefectures","prefecture","cases","recovered","deaths","prefectureja","daily","date","confirmed","deceased","critical","tested","getInitialProps","res","resData","json"],"mappings":"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","sourcesContent":["import Layout from \"../components/MainLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport NumberFormat from \"react-number-format\";\n\nconst Index = props => (\n  <Layout>\n    <h1>COVID-19 Situation Report in Japan</h1>\n\n    <h4>As at {props.stats.map((updated, i) => ( \n    <span key={i} >{updated.lastupdated}</span> ))}\n    </h4>\n    <hr></hr>\n    <h2 className=\"my-3\">Total</h2>\n    <div className=\"row\">\n    {props.stats.slice(0,1).map(prefectures => (\n      <div key={prefectures.prefecture} className=\"col-sm-4\">\n        <div className=\"card mb-3 border-info\">\n          <div className=\"card-body text-info\">\n            <h3 className=\"card-title\"><NumberFormat value={prefectures.cases} displayType={'text'} thousandSeparator={true} prefix={''} /></h3>\n            <p className=\"card-text\">\n              Cases\n            </p>\n          </div>\n        </div>\n      </div>\n      ))}\n      {props.stats.slice(0,1).map(prefectures => (\n      <div key={prefectures.prefecture} className=\"col-sm-4\">\n        <div className=\"card mb-3 border-success\">\n          <div className=\"card-body text-success\">\n            <h3 className=\"card-title\"><NumberFormat value={prefectures.recovered} displayType={'text'} thousandSeparator={true} prefix={''} /></h3>\n            <p className=\"card-text\">\n              Recovered\n            </p>\n          </div>\n        </div>\n      </div>\n      ))}\n      {props.stats.slice(0,1).map(prefectures => (\n      <div key={prefectures.prefecture} className=\"col-sm-4\">\n        <div className=\"card mb-3 border-danger\">\n          <div className=\"card-body text-danger\">\n            <h3 className=\"card-title\"><NumberFormat value={prefectures.deaths} displayType={'text'} thousandSeparator={true} prefix={''} /></h3>\n            <p className=\"card-text\">\n              Deaths\n            </p>\n          </div>\n        </div>\n      </div>\n      ))}\n    </div>\n    <h2 className=\"my-3\">Prefecture Data</h2>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>\n            <th>Prefecture</th>\n            <th>Cases</th>\n            <th>Recovered</th>\n            <th>Deaths</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.stats.slice(1).map(prefectures => (\n            <tr key={prefectures.prefecture}>\n              <td>\n                {prefectures.prefecture} ({prefectures.prefectureja})\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.cases}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.recovered}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.deaths}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n\n    <h2 className=\"my-3\">Daily Report</h2>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Confirmed</th>\n            <th>Recovered</th>\n            <th>Deceased</th>\n            <th>Critical</th>\n            <th>Tested</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.stats.map((daily, i) => (\n            <tr key={i}>\n              <td>{daily.date}</td>\n              <td>\n                <NumberFormat\n                  value={daily.confirmed}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.recovered}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.deceased}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.critical}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.tested}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n\n    <footer className=\"footer mt-auto py-3\">\n      <p>\n        Data Source:{\" \"}\n        <a href=\"https://covid19japan.com/\" target=\"_blank\">\n          Japan COVID-19 Coronavirus Tracker\n        </a>\n      </p>\n      <ul className=\"list-unstyled\">\n        <li>\n          <strong>Important Links</strong>\n        </li>\n        <li>\n          <a\n            href=\"http://idsc.tokyo-eiken.go.jp/diseases/2019-ncov/\"\n            target=\"_blank\"\n          >\n            Information from the Tokyo Metropolitan Infectious Disease\n            Surveillance Center\n          </a>\n        </li>\n      </ul>\n\n      <p className=\"mt-3\">\n        Built and maintained by{\" \"}\n        <a href=\"https://dalpatadu.com/\" target=\"_blank\">\n          Yohan Dalpatadu\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          href=\"https://github.com/yohandalpe/covid19-dashboard-nextjs\"\n          target=\"_blank\"\n        >\n          GitHub Repository\n        </a>{\" \"}\n      </p>\n    </footer>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  // Fetch data from HPB API\n  const res = await fetch(\n    \"https://covid19japan.s3.ap-northeast-1.amazonaws.com/data.json\"\n  );\n  const resData = await res.json();\n\n  // Pass data to the page via props\n  return {\n    stats: resData.prefectures,\n    updated: resData.updated\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}