{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/yohandalpatadu/Projects/github/covid19-dashboard-nextjs/pages/italy.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/MainLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport NumberFormat from \"react-number-format\";\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"COVID-19 Situation Report in Italy\"), __jsx(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"As at\", \" \", props.updated.map(function (updated, i) {\n    return __jsx(\"span\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, updated.lastupdated);\n  })), __jsx(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), __jsx(\"h2\", {\n    className: \"my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Total\"), __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.stats.slice(0, 1).map(function (prefectures) {\n    return __jsx(\"div\", {\n      key: prefectures.prefecture,\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card mb-3 border-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-body text-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: prefectures.cases,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })), __jsx(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Cases\"))));\n  }), props.stats.slice(0, 1).map(function (prefectures) {\n    return __jsx(\"div\", {\n      key: prefectures.prefecture,\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card mb-3 border-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-body text-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: prefectures.recovered,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), __jsx(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Recovered\"))));\n  }), props.stats.slice(0, 1).map(function (prefectures) {\n    return __jsx(\"div\", {\n      key: prefectures.prefecture,\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card mb-3 border-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"card-body text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: prefectures.deaths,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), __jsx(\"p\", {\n      className: \"card-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Deaths\"))));\n  })), __jsx(\"h2\", {\n    className: \"my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Prefecture Data\"), __jsx(\"div\", {\n    className: \"table-responsive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, __jsx(\"table\", {\n    className: \"table table-hover table-bordered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Prefecture\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Cases\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Recovered\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Deaths\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, props.stats.slice(1).map(function (prefectures) {\n    return __jsx(\"tr\", {\n      key: prefectures.prefecture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, prefectures.prefecture, \" (\", prefectures.prefectureja, \")\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: prefectures.cases,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: prefectures.recovered,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: prefectures.deaths,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })));\n  })))), __jsx(\"h2\", {\n    className: \"my-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Daily Report\"), __jsx(\"div\", {\n    className: \"table-responsive\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(\"table\", {\n    className: \"table table-hover table-bordered\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Date\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Confirmed\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Recovered\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"Deceased\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Critical\"), __jsx(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \"Tested\"))), __jsx(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, props.daily.map(function (daily, i) {\n    return __jsx(\"tr\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, daily.date), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: daily.confirmed,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: daily.recovered,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: daily.deceased,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: daily.critical,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, __jsx(NumberFormat, {\n      value: daily.tested,\n      displayType: \"text\",\n      thousandSeparator: true,\n      prefix: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })));\n  })))), __jsx(\"footer\", {\n    className: \"footer mt-auto py-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Data Source:\", \" \", __jsx(\"a\", {\n    href: \"https://github.com/pcm-dpc/COVID-19\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"COVID-19 Italy - Situation Monitoring\")), __jsx(\"ul\", {\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, __jsx(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Important Links\")), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: \"http://www.protezionecivile.it/attivita-rischi/rischio-sanitario/emergenze/coronavirus\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Department of Civil Protection Website - Coronavirus Emergency: The National Response\"))), __jsx(\"p\", {\n    className: \"mt-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Built and maintained by\", \" \", __jsx(\"a\", {\n    href: \"https://dalpatadu.com/\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Yohan Dalpatadu\"), \" \", \"|\", \" \", __jsx(\"a\", {\n    href: \"https://github.com/yohandalpe/covid19-dashboard-nextjs\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"GitHub Repository\"), \" \")));\n};\n\nIndex.getInitialProps = function _callee() {\n  var resNationalLatest, resProvinceLatest, resDataNationalLatest, resDataProvinceLatest;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale-latest.json\"));\n\n        case 2:\n          resNationalLatest = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch(\"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-province-latest.json\"));\n\n        case 5:\n          resProvinceLatest = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(resNationalLatest.json());\n\n        case 8:\n          resDataNationalLatest = _context.sent;\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(resProvinceLatest.json());\n\n        case 11:\n          resDataProvinceLatest = _context.sent;\n          return _context.abrupt(\"return\", {\n            nationalLatest: resDataNationalLatest,\n            provinceLatest: resDataProvinceLatest\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/yohandalpatadu/Projects/github/covid19-dashboard-nextjs/pages/italy.js"],"names":["Layout","fetch","NumberFormat","Index","props","updated","map","i","lastupdated","stats","slice","prefectures","prefecture","cases","recovered","deaths","prefectureja","daily","date","confirmed","deceased","critical","tested","getInitialProps","resNationalLatest","resProvinceLatest","json","resDataNationalLatest","resDataProvinceLatest","nationalLatest","provinceLatest"],"mappings":"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","sourcesContent":["import Layout from \"../components/MainLayout\";\nimport fetch from \"isomorphic-unfetch\";\nimport NumberFormat from \"react-number-format\";\n\nconst Index = props => (\n  <Layout>\n    <h1>COVID-19 Situation Report in Italy</h1>\n\n    <h4>\n      As at{\" \"}\n      {props.updated.map((updated, i) => (\n        <span key={i}>{updated.lastupdated}</span>\n      ))}\n    </h4>\n    <hr></hr>\n    <h2 className=\"my-3\">Total</h2>\n    <div className=\"row\">\n      {props.stats.slice(0, 1).map(prefectures => (\n        <div key={prefectures.prefecture} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-info\">\n            <div className=\"card-body text-info\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={prefectures.cases}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Cases</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.stats.slice(0, 1).map(prefectures => (\n        <div key={prefectures.prefecture} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-success\">\n            <div className=\"card-body text-success\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={prefectures.recovered}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Recovered</p>\n            </div>\n          </div>\n        </div>\n      ))}\n      {props.stats.slice(0, 1).map(prefectures => (\n        <div key={prefectures.prefecture} className=\"col-sm-4\">\n          <div className=\"card mb-3 border-danger\">\n            <div className=\"card-body text-danger\">\n              <h3 className=\"card-title\">\n                <NumberFormat\n                  value={prefectures.deaths}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </h3>\n              <p className=\"card-text\">Deaths</p>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n    <h2 className=\"my-3\">Prefecture Data</h2>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>\n            <th>Prefecture</th>\n            <th>Cases</th>\n            <th>Recovered</th>\n            <th>Deaths</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.stats.slice(1).map(prefectures => (\n            <tr key={prefectures.prefecture}>\n              <td>\n                {prefectures.prefecture} ({prefectures.prefectureja})\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.cases}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.recovered}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={prefectures.deaths}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n\n    <h2 className=\"my-3\">Daily Report</h2>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover table-bordered\">\n        <thead>\n          <tr>\n            <th>Date</th>\n            <th>Confirmed</th>\n            <th>Recovered</th>\n            <th>Deceased</th>\n            <th>Critical</th>\n            <th>Tested</th>\n          </tr>\n        </thead>\n        <tbody>\n          {props.daily.map((daily, i) => (\n            <tr key={i}>\n              <td>{daily.date}</td>\n              <td>\n                <NumberFormat\n                  value={daily.confirmed}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.recovered}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.deceased}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.critical}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n              <td>\n                <NumberFormat\n                  value={daily.tested}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"\"}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n\n    <footer className=\"footer mt-auto py-3\">\n      <p>\n        Data Source:{\" \"}\n        <a href=\"https://github.com/pcm-dpc/COVID-19\" target=\"_blank\">\n          COVID-19 Italy - Situation Monitoring\n        </a>\n      </p>\n      <ul className=\"list-unstyled\">\n        <li>\n          <strong>Important Links</strong>\n        </li>\n        <li>\n          <a\n            href=\"http://www.protezionecivile.it/attivita-rischi/rischio-sanitario/emergenze/coronavirus\"\n            target=\"_blank\"\n          >\n            Department of Civil Protection Website - Coronavirus Emergency: The National Response\n          </a>\n        </li>\n      </ul>\n\n      <p className=\"mt-3\">\n        Built and maintained by{\" \"}\n        <a href=\"https://dalpatadu.com/\" target=\"_blank\">\n          Yohan Dalpatadu\n        </a>{\" \"}\n        |{\" \"}\n        <a\n          href=\"https://github.com/yohandalpe/covid19-dashboard-nextjs\"\n          target=\"_blank\"\n        >\n          GitHub Repository\n        </a>{\" \"}\n      </p>\n    </footer>\n  </Layout>\n);\n\nIndex.getInitialProps = async function() {\n  // Fetch data from the JSON\n  // Italy National Latest\n  const resNationalLatest = await fetch(\n    \"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-andamento-nazionale-latest.json\"\n  );\n  // Italy Province Latest\n  const resProvinceLatest = await fetch(\n    \"https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-json/dpc-covid19-ita-province-latest.json\"\n  );\n\n  const resDataNationalLatest = await resNationalLatest.json();\n  const resDataProvinceLatest = await resProvinceLatest.json();\n\n  // Pass data to the page via props\n  return {\n    nationalLatest: resDataNationalLatest,\n    provinceLatest: resDataProvinceLatest\n  };\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}